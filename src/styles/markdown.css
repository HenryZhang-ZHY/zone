.z-markdown-content :not(a, strong, em, del, span, input, code, br)+:not(a, strong, em, del, span, input, code, br, :where(.not-content *)) {
  margin-top: 1rem
}

.z-markdown-content :not(h1, h2, h3, h4, h5, h6)+:is(h1, h2, h3, h4, h5, h6):not(:where(.not-content *)) {
  margin-top: 1.5em
}

.z-markdown-content li+li:not(:where(.not-content *)),
.z-markdown-content dt+dt:not(:where(.not-content *)),
.z-markdown-content dt+dd:not(:where(.not-content *)),
.z-markdown-content dd+dd:not(:where(.not-content *)) {
  margin-top: .25rem
}

.z-markdown-content li:not(:where(.not-content *)) {
  overflow-wrap: anywhere
}

.z-markdown-content li>:last-child:not(li, ul, ol, a, strong, em, del, span, input, code, br, :where(.not-content *)) {
  margin-bottom: 1.25rem
}

.z-markdown-content dt:not(:where(.not-content *)) {
  font-weight: 700
}

.z-markdown-content dd:not(:where(.not-content *)) {
  padding-inline-start: 1rem
}

.z-markdown-content :is(h1, h2, h3, h4, h5, h6):not(:where(.not-content *)) {
  color: var(--z-color-white);
  line-height: var(--z-line-height-headings);
  font-weight: 600
}

.z-markdown-content :is(img, picture, video, canvas, svg, iframe):not(:where(.not-content *)) {
  display: block;
  max-width: 100%;
  height: auto
}

.z-markdown-content h1:not(:where(.not-content *)) {
  font-size: var(--z-text-h1)
}

.z-markdown-content h2:not(:where(.not-content *)) {
  font-size: var(--z-text-h2)
}

.z-markdown-content h3:not(:where(.not-content *)) {
  font-size: var(--z-text-h3)
}

.z-markdown-content h4:not(:where(.not-content *)) {
  font-size: var(--z-text-h4)
}

.z-markdown-content h5:not(:where(.not-content *)) {
  font-size: var(--z-text-h5)
}

.z-markdown-content h6:not(:where(.not-content *)) {
  font-size: var(--z-text-h6)
}

.z-markdown-content a:not(:where(.not-content *)) {
  color: var(--z-color-text-accent)
}

.z-markdown-content a:hover:not(:where(.not-content *)) {
  color: var(--z-color-white)
}

.z-markdown-content code:not(:where(.not-content *)) {
  background-color: var(--z-color-bg-inline-code);
  margin-block: -.125rem;
  padding: .125rem .375rem;
  font-size: var(--z-text-code-sm)
}

.z-markdown-content :is(h1, h2, h3, h4, h5, h6) code {
  font-size: inherit
}

.z-markdown-content pre:not(:where(.not-content *)) {
  border: 1px solid var(--z-color-gray-5);
  padding: .75rem 1rem;
  font-size: var(--z-text-code);
  tab-size: 2
}

.z-markdown-content pre code:not(:where(.not-content *)) {
  all: unset;
  font-family: var(--__sl-font-mono)
}

.z-markdown-content blockquote:not(:where(.not-content *)) {
  border-inline-start: 1px solid var(--z-color-gray-5);
  padding-inline-start: 1rem
}

.z-markdown-content table:not(:where(.not-content *)) {
  display: block;
  overflow: auto;
  border-spacing: 0
}

.z-markdown-content :is(th, td):not(:where(.not-content *)) {
  border-bottom: 1px solid var(--z-color-gray-5);
  padding: .5rem 1rem;
  vertical-align: baseline
}

.z-markdown-content :is(th:first-child, td:first-child):not(:where(.not-content *)) {
  padding-inline-start: 0
}

.z-markdown-content :is(th:last-child, td:last-child):not(:where(.not-content *)) {
  padding-inline-end: 0
}

.z-markdown-content th:not(:where(.not-content *)) {
  color: var(--z-color-white);
  font-weight: 600
}

.z-markdown-content th:not([align]):not(:where(.not-content *)) {
  text-align: start
}

.z-markdown-content .starlight-aside :is(th, td, hr, blockquote):not(:where(.not-content *)) {
  border-color: var(--z-color-gray-4)
}

@supports (border-color: color-mix(in srgb, var(--z-color-asides-text-accent) 30%, transparent)) {
  .z-markdown-content .starlight-aside :is(th, td, hr, blockquote):not(:where(.not-content *)) {
    border-color: color-mix(in srgb, var(--z-color-asides-text-accent) 30%, transparent)
  }
}

@supports (border-color: color-mix(in srgb, var(--z-color-asides-text-accent) 12%, transparent)) {
  .z-markdown-content .starlight-aside code:not(:where(.not-content *)) {
    background-color: color-mix(in srgb, var(--z-color-asides-text-accent) 12%, transparent)
  }
}

.z-markdown-content hr:not(:where(.not-content *)) {
  border: 0;
  border-bottom: 1px solid var(--z-color-hairline)
}

.z-markdown-content details:not(:where(.not-content *)) {
  --z-details-border-color: var(--z-color-gray-5);
  --z-details-border-color--hover: var(--z-color-text-accent);
  border-inline-start: 2px solid var(--z-details-border-color);
  padding-inline-start: 1rem
}

.z-markdown-content details:not([open]):hover:not(:where(.not-content *)),
.z-markdown-content details:has(>summary:hover):not(:where(.not-content *)) {
  border-color: var(--z-details-border-color--hover)
}

.z-markdown-content summary:not(:where(.not-content *)) {
  color: var(--z-color-white);
  cursor: pointer;
  display: block;
  font-weight: 600;
  margin-inline-start: -.5rem;
  padding-inline-start: .5rem
}

.z-markdown-content details[open]>summary:not(:where(.not-content *)) {
  margin-bottom: 1rem
}

.z-markdown-content summary:not(:where(.not-content *))::marker,
.z-markdown-content summary:not(:where(.not-content *))::-webkit-details-marker {
  display: none
}

.z-markdown-content summary:not(:where(.not-content *)):before {
  --z-details-marker-size: 1.25rem;
  background-color: currentColor;
  content: "";
  display: inline-block;
  height: var(--z-details-marker-size);
  width: var(--z-details-marker-size);
  margin-inline: calc((var(--z-details-marker-size) / 4) * -1) .25rem;
  vertical-align: middle;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M14.8 11.3 10.6 7a1 1 0 1 0-1.4 1.5l3.5 3.5-3.5 3.5a1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 .7-.3l4.2-4.2a1 1 0 0 0 0-1.4Z'/%3E%3C/svg%3E%0A");
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M14.8 11.3 10.6 7a1 1 0 1 0-1.4 1.5l3.5 3.5-3.5 3.5a1 1 0 0 0 0 1.4 1 1 0 0 0 .7.3 1 1 0 0 0 .7-.3l4.2-4.2a1 1 0 0 0 0-1.4Z'/%3E%3C/svg%3E%0A");
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat
}

@media (prefers-reduced-motion: no-preference) {
  .z-markdown-content summary:not(:where(.not-content *)):before {
    transition: transform .2s ease-in-out
  }
}

.z-markdown-content details[open]>summary:not(:where(.not-content *)):before {
  transform: rotate(90deg)
}

[dir=rtl] .z-markdown-content summary:not(:where(.not-content *)):before,
.z-markdown-content [dir=rtl] summary:not(:where(.not-content *)):before {
  transform: rotate(180deg)
}

.z-markdown-content summary:not(:where(.not-content *)) p:only-child {
  display: inline
}

.z-markdown-content .starlight-aside details:not(:where(.not-content *)) {
  --z-details-border-color: var(--z-color-asides-border);
  --z-details-border-color--hover: var(--z-color-asides-text-accent)
}

/* Space around sections */
.z-markdown-content :not(h1, h2, h3, h4, h5, h6)+ :is(h1, h2, h3, h4, h5, h6):not(:where(.not-content *)),
.z-markdown-content :not(a, strong, em, del, span, input, code)+hr:not(:where(.not-content *)),
.z-markdown-content hr:not(:where(.not-content *))+ :not(a, strong, em, del, span, input, code, :where(.not-content *)) {
  margin-top: calc(var(--paragraph-spacing) + 2rem);
}

/**
 * Code blocks
 */
@media (prefers-color-scheme: dark) {

  .z-markdown-content .astro-code,
  .z-markdown-content .astro-code span {
    color: var(--shiki-dark) !important;
    background-color: var(--shiki-dark-bg) !important;
  }
}

/* Space around asides and code blocks */
.z-markdown-content :not(a, strong, em, del, span, input, code)+ :is(.expressive-code) {
  margin-top: calc(var(--paragraph-spacing) + 0.4375rem);
}

.z-markdown-content :is(.expressive-code)+ :is(.expressive-code) {
  margin-top: calc(var(--paragraph-spacing) + 1.125rem);
}

/* Plain blocks */
.z-markdown-content .expressive-code .frame:not(.has-title):not(.is-terminal) pre {
  border-color: var(--z-color-white);
  border-radius: 0;
  background-color: transparent
}

.z-markdown-content .expressive-code .copy {
  inset-block-start: calc(var(--ec-brdWd) + var(--button-spacing) + .1rem)
}

.z-markdown-content .expressive-code .copy .feedback {
  --tooltip-bg: var(--z-color-gray-3);
  font-size: .75rem;
  line-height: 1;
  padding: .375rem .5rem;
  text-transform: uppercase;
  letter-spacing: .5px
}

.z-markdown-content .expressive-code .copy button {
  width: 2rem;
  height: 2rem;
  border-radius: 0;
  background-color: var(--z-color-bg);

  &:before {
    opacity: 1;
    border-color: var(--z-color-white)
  }

  & div {
    background-color: transparent
  }
}

@media (hover: hover) {

  .z-markdown-content .expressive-code .frame:hover .copy button:not(:hover),
  .z-markdown-content .expressive-code .frame:focus-within :focus-visible~.copy button:not(:hover),
  .z-markdown-content .expressive-code .frame .copy .feedback.show~button:not(:hover) {
    opacity: 1
  }
}

.z-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .header {
  background: transparent;
  border-bottom: 1px solid var(--z-color-white);
  border-radius: 0
}

.z-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .header:before {
  border-color: var(--z-color-white)
}

.z-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .title {
  border-width: 1px 1px 0;
  border-style: solid;
  font-size: var(--z-text-sm);
  background: transparent;
  border-radius: 0;
  border-color: var(--z-color-white) var(--z-color-white) transparent
}

.z-markdown-content .expressive-code .frame.has-title:not(.is-terminal) .title:after {
  border: none
}

.z-markdown-content .expressive-code .frame pre {
  background: transparent
}

.z-markdown-content .expressive-code .frame.has-title pre {
  border-color: var(--z-color-white)
}

.z-markdown-content .expressive-code .frame.is-terminal .header {
  font-size: var(--z-text-sm);
  font-weight: 400;
  border-radius: 0;
  background: transparent;
  border-color: var(--z-color-white)
}

.z-markdown-content .expressive-code .frame.is-terminal .header:after {
  border-color: var(--z-color-white)
}

.z-markdown-content .expressive-code .frame.is-terminal pre {
  border-color: var(--z-color-white)
}

.z-markdown-content .expressive-code .frame,
.z-markdown-content .frame {
  --ec-tm-markBg: light-dark(#00000011, #ffffff0f);
  --ec-tm-insBg: light-dark(#90c87e72, #1e561572);
  --ec-tm-delBg: light-dark(#ff9c8f7f, #862d2766);
}

.z-markdown-content .expressive-code .ec-line.mark>.code,
.z-markdown-content .expressive-code .ec-line.ins>.code,
.z-markdown-content .expressive-code .ec-line.del>.code {
  border-inline-start-color: transparent
}

.z-markdown-content .expressive-code .ec-line mark:before,
.z-markdown-content .expressive-code .ec-line ins:before,
.z-markdown-content .expressive-code .ec-line del:before {
  border-width: 0px
}
