---
import BaseLayout from '../layouts/BaseLayout.astro'

import { getCollection } from 'astro:content'
import FormattedDate from '../components/FormattedDate.astro'

const posts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
---

<BaseLayout>
	<main>
		<section class="posts-container">
			{
				posts.length > 0 ? (
					posts.map((post) => (
						<article class="post-item">
							<a href={`/blog/${post.id}/`} class="post-link">
								<h2 class="post-title">{post.data.title}</h2>
								{post.data.description && <p class="post-excerpt">{post.data.description}</p>}
								<div class="post-meta">
									<time class="post-date">
										<FormattedDate date={post.data.pubDate} />
									</time>
								</div>
							</a>
						</article>
					))
				) : (
					<div class="empty-state">
						<h3>No posts yet</h3>
						<p>Check back later for new content.</p>
					</div>
				)
			}
		</section>
	</main>
</BaseLayout>

<style>
	* {
		box-sizing: border-box;
	}

	main {
		max-width: 680px;
		margin: 0 auto;
		padding: 4rem 2rem 6rem;
		min-height: calc(100vh - 200px);
	}

	.posts-container {
		display: flex;
		flex-direction: column;
		gap: 0;
	}

	.post-item {
		padding: 2rem 0;
		border-bottom: 1px solid var(--z-color-hairline-light);
	}

	.post-item:last-child {
		border-bottom: none;
	}

	.post-link {
		display: block;
		text-decoration: none;
		color: inherit;
	}

	.post-title {
		font-size: var(--z-text-h4);
		font-weight: 700;
		line-height: 1.3;
		margin: 0 0 0.75rem 0;
		letter-spacing: -0.01em;
		color: var(--z-color-text);
	}

	.post-link:hover .post-title {
		color: var(--z-color-text-accent);
	}

	.post-excerpt {
		font-size: var(--z-text-base);
		color: var(--z-color-text-secondary);
		line-height: var(--z-line-height);
		margin: 0 0 1rem 0;
		font-weight: 400;
	}

	.post-meta {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-size: var(--z-text-sm);
		color: var(--z-color-text-dimmed);
	}

	.post-date {
		font-weight: 400;
		text-transform: none;
		letter-spacing: 0;
	}

	.divider {
		margin: 0 0.5rem;
		color: var(--z-color-hairline-light);
	}

	.read-time {
		color: var(--z-color-text-dimmed);
	}

	/* Empty state */
	.empty-state {
		text-align: center;
		padding: 4rem 0;
		color: var(--z-color-text-secondary);
	}

	.empty-state h3 {
		font-size: var(--z-text-h4);
		margin: 0 0 1rem 0;
		color: var(--z-color-text);
	}

	/* Responsive Design */
	@media (max-width: 768px) {
		main {
			padding: 2rem 1.5rem 4rem;
			max-width: 100%;
		}

		.post-item {
			padding: 1.5rem 0;
		}

		.post-title {
			font-size: var(--z-text-2xl);
			margin-bottom: 0.5rem;
		}

		.post-excerpt {
			font-size: var(--z-text-sm);
			margin-bottom: 0.75rem;
		}

		.post-meta {
			font-size: var(--z-text-xs);
		}
	}

	@media (max-width: 480px) {
		main {
			padding: 1.5rem 1rem 3rem;
		}

		.post-item {
			padding: 1.25rem 0;
		}

		.post-title {
			font-size: var(--z-text-xl);
			line-height: 1.25;
		}

		.post-excerpt {
			font-size: var(--z-text-sm);
			line-height: 1.5;
		}
	}

	/* Large screens */
	@media (min-width: 1200px) {
		main {
			max-width: 728px;
			padding: 5rem 2rem 8rem;
		}

		.hero-section {
			margin-bottom: 5rem;
		}

		.post-item {
			padding: 2.5rem 0;
		}
	}
</style>
